name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t flask-app:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag flask-app:latest muhammad679/flask-app:latest
          docker push muhammad679/flask-app:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Pull Docker image
        run: docker pull muhammad679/flask-app:latest

      - name: Reset kubeconfig
        run: kubectl config unset contexts

      - name: Set context
        run: kubectl config set-context k8s --cluster=kind-control-plane

      - name: Switch to correct context
        run: kubectl config use-context k8s --v=5

      - name: Load Docker image into kind cluster
        run: kind load docker-image muhammad679/flask-app:latest

      - name: Deploy to Blue namespace
        run: |
          kubectl apply -f blue-deployment.yaml
          kubectl apply -f blue-service.yaml
          kubectl rollout status deployment/flask-app -n blue

      - name: Health check Blue
        run: |
          kubectl run health-check --rm -i --tty --image=appropriate/curl -- curl -f http://flask-app.blue.svc.cluster.local/health || exit 1

      - name: Deploy to Green namespace
        run: |
          kubectl apply -f green-deployment.yaml
          kubectl apply -f green-service.yaml
          kubectl rollout status deployment/flask-app -n green

      - name: Health check Green
        run: |
          kubectl run health-check --rm -i --tty --image=appropriate/curl -- curl -f http://flask-app.green.svc.cluster.local/health || exit 1

      - name: Switch traffic to Green
        run: kubectl apply -f switch-to-green.yaml