name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t muhammad679/flask-app:latest .
        docker push muhammad679/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

    - name: Deploy to Blue namespace
      run: |
        kubectl apply -f k8s/blue/

    - name: Health check Blue deployment
      run: |
        kubectl rollout status deployment/flask-app -n blue

    - name: Deploy to Green namespace
      run: |
        kubectl apply -f k8s/green/

    - name: Health check Green deployment
      run: |
        kubectl rollout status deployment/flask-app -n green

    - name: Switch traffic to Green
      run: |
        kubectl patch service flask-app -p '{"spec":{"selector":{"app":"flask-app-green"}}}'

    - name: Rollback if Green deployment fails
      if: failure()
      run: |
        kubectl patch service flask-app -p '{"spec":{"selector":{"app":"flask-app-blue"}}}'
        kubectl rollout undo deployment/flask-app -n green
